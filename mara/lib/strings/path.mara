module
import meta

SEP = depend 'fs/path/SEP'
OS = depend 'os/TMP_DIR'

trait Path {
    def value -> Text
    def isabs -> Bool
    def isrel -> Bool
    def istmp -> Bool
}

def Text::isabs { this[0] == SEP }
def Text::isrel { this[0] != SEP }
def Text::istmp { this.contains TMP_DIR }

@meta.proxy
datum RelPath { value Text; path_offsets Int64.Array }

@meta.proxy
datum AbsPath { value Text; path_offsets Int64.Array }

@meta.proxy
datum TmpPath { value Text; rel_offset Int8 }


def Path(value String) {
    match value = value.text
    as .isrel { RelPath(value, value.findall '/' }
    as .isabs { AbsPath(value, value.findall '/') }
    as .istmp { TmpPath(value, value.lastindexof OS/TMP_DIR) }
}


end


module test


end test
